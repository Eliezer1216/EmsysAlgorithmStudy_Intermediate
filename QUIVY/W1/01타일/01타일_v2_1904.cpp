// 00 아니면 1으로 구분
// (1): 모든 경우의 수를 구한 다음에 안되는 경우 구분하기? - 모든 경우의 수 = 2^N; - 너무 많음
// (2): 2a(00)+b(1)=N -> N 에서 (00)의 개수를 뺀 뒤 (=M) -> M^2

// (3): 일일이 계산하지 말고 숏커트
//  1:1  2:2  3:3  4:5  5:8  6:13 ... n:a   n+1:b   n+2:a+b

#include <iostream>
using namespace std;

int main(){
    int N;
    int fib[3]={1, 2, };
    
    cin >> N;           //N 입력

    
    for(int i=3; i<=N; i++){
        fib[2]=(fib[1]+fib[0])%15746;
        fib[0]=fib[1];
        fib[1]=fib[2];
    }
    if(N!=1)
    cout << fib[1];
    else cout << 1;
    
}

//오류 1: 시간초과 
        // (1) 제곱함수 없애기
        // (2) i (1타일의 갯수) 줄어드는 갯수를 1에서 2로 (1대신 00타일이 들어가므로 어짜피 2개를 없애야함)