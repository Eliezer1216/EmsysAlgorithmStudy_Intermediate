//실패사례: 코드 구성을 너무 복잡하게 하여서 실패
//코드 구성 방향을 잘못되게 함 - 무식하게 더해지는 모든 값을 구하려고 해서 구성 실패 -> 다른 코드 예시를 보면서 방향 전환

//배운점: segmentation fault 는 함수 선언할깨 너무 큰 함수를 호출할시 발생을 함 (int res[500][1000] 는 너무 큰 공간을 불러오기 때문에 오류가 남)


//해결방법: 
// (1) - 큰 값만 쫓기? X
//      (1 -> 1 -> 9) > (3 -> 4 -> 1)
// (2) 모든 경우의 수 계산
//      (2-1)  n->n+1 단계별로 계산 - 저장해야할 결과값들이 너무 많아짐
//              (1->:; 2개, 2->3:6개 ... n->n+1 : (n+1)*2 경우의 수 )
//                                      오히려 될수도. 더 쉽고
//      (2-2) 최종까지 모든 경우의 수 (브랜치 별로)

#include <iostream>
using namespace std;

int main(void){
    int n=0;             //삼각형의 크기 변수 선언
    int tri[501][510]={0, };      //삼각형 배열 변수
    int res[501][1010]={0, };

    cin >> n;               //삼각형의 크기
    for(int i=1; i<=n; i++){
        for(int j=1; j<i+1; j++){
        cin >> tri[i][j];           //값 입력

        res[i+1][2*j-1]+=tri[i][j];  //res다음줄에 정보 입력
        res[i+1][2*j]+=tri[i][j];
        }



        res[i][1]+=tri[i][1];   //res에 합
        res[i][2]+=tri[i][2];
        res[i][i]+=tri[i][i];
        res[i][2*i]+=tri[i][i-1];
        if(i>3){
            for(int j=2; j<i-2; j++){
                res[i][j*2]+=tri[i][j];
                res[i][j*2-1]+=tri[i][j+1];
            }
        }
    }
    
    
    for(int j=1; j<2*(n+1); j++)
        cout << res[n][j] << ' ';
}